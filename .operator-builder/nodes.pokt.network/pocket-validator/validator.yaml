---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: v1-validator1 # +operator-builder:field:parent=metadata.name,type=string
  namespace: default # +operator-builder:collection:field:parent=metadata.name,type=string
spec:
  selector:
    matchLabels:
      app: v1-validator1 # +operator-builder:field:parent=metadata.name,type=string
  serviceName: v1-validator1 # +operator-builder:field:parent=metadata.name,type=string
  replicas: 1 # +operator-builder:field:name=validatorReplicas,type=int,default=1
  template:
    metadata:
      labels:
        app: v1-validator1 # +operator-builder:field:parent=metadata.name,type=string
        v1-purpose: validator
    spec:
      containers:
        - name: pocket
          image: ghcr.io/pokt-network/pocket-v1:main-dev # +operator-builder:field:name=pocketImage,type=string
          args:
            - pocket
            - -config=/configs/config.json
            - -genesis=/genesis.json
          ports:
            - containerPort: 8080 # +operator-builder:field:name=ports.consensus,type=int,default=8080
              name: consensus
          volumeMounts:
            - name: config-volume
              mountPath: /configs
            - name: genesis-volume
              mountPath: /genesis.json
              subPath: genesis.json
            - name: name-blockstore # +operator-builder:field:parent=metadata.name,replace="name",type=string
              mountPath: /blockstore
      volumes:
        - name: config-volume
          configMap:
            name: name-config # +operator-builder:field:parent=metadata.name,replace="name",type=string
        - name: genesis-volume
          configMap:
            name: name-genesis # +operator-builder:collection:field:parent=metadata.name,replace="name",type=string
  volumeClaimTemplates:
    - metadata:
        name: name-blockstore # +operator-builder:field:parent=metadata.name,replace="name",type=string
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: v1-validator1 # +operator-builder:field:parent=metadata.name,type=string
  namespace: default # +operator-builder:collection:field:parent=metadata.name,type=string
  labels:
    app: v1-validator1 # +operator-builder:field:parent=metadata.name,type=string
spec:
  ports:
    - port: 8080 # +operator-builder:field:name=ports.consensus,type=int,default=8080
      name: consensus
  selector:
    app: v1-validator1 # +operator-builder:field:parent=metadata.name,type=string
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: name-config # +operator-builder:field:parent=metadata.name,type=string,replace="name"
  namespace: default # +operator-builder:collection:field:parent=metadata.name,type=string
data:
  # +operator-builder:field:name=privateKey,type=string,replace="privatekey",default="ccec19df8fe866280e41da68d52d0ecdb07b01e85eeef45f400fd3a89b71c26a79254a4bc46bf1182826145b0b01b48bab4240cd30e23ba90e4e5e6b56961c6d"
  # +operator-builder:field:name=postgres_url,type=string,replace="MOCK_POSTGRES_URL",default="postgres://validator:postgres@pocket-database:5432/validatordb"
  # +operator-builder:field:name=postgres_schema,type=string,replace="MOCK_POSTGRES_SCHEMA",default="validator"
  # +operator-builder:field:name=ports.consensus,type=int,replace="consensus_port_value",default="8080"
  config.json: |
    {
      "base": {
        "root_directory": "/go/src/github.com/pocket-network",
        "private_key": "privatekey"
      },
      "consensus": {
        "max_mempool_bytes": 500000000,
        "pacemaker_config": {
          "timeout_msec": 5000,
          "manual": true,
          "debug_time_between_steps_msec": 1000
        },
        "private_key": "privatekey"
      },
      "utility": {
        "max_mempool_transaction_bytes": 1073741824,
        "max_mempool_transactions": 9000
      },
      "persistence": {
        "postgres_url": "MOCK_POSTGRES_URL",
        "node_schema": "MOCK_POSTGRES_SCHEMA",
        "block_store_path": "/blockstore"
      },
      "p2p": {
        "consensus_port": consensus_port_value,
        "use_rain_tree": true,
        "is_empty_connection_type": false,
        "private_key": "privatekey"
      },
      "telemetry": {
        "enabled": true,
        "address": "0.0.0.0:9000",
        "endpoint": "/metrics"
      }
    }
